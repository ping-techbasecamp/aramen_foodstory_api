// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BranchesColumns holds the columns for the "branches" table.
	BranchesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "short_description", Type: field.TypeString},
		{Name: "full_description", Type: field.TypeString},
		{Name: "telephone", Type: field.TypeString},
		{Name: "latitude", Type: field.TypeInt},
		{Name: "longitude", Type: field.TypeInt},
		{Name: "goole_map_url", Type: field.TypeString},
		{Name: "dine_in", Type: field.TypeBool},
		{Name: "delivery", Type: field.TypeBool},
		{Name: "take_away", Type: field.TypeBool},
	}
	// BranchesTable holds the schema information for the "branches" table.
	BranchesTable = &schema.Table{
		Name:       "branches",
		Columns:    BranchesColumns,
		PrimaryKey: []*schema.Column{BranchesColumns[0]},
	}
	// NewsColumns holds the columns for the "news" table.
	NewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "tag", Type: field.TypeString},
		{Name: "place", Type: field.TypeString},
		{Name: "date", Type: field.TypeString},
	}
	// NewsTable holds the schema information for the "news" table.
	NewsTable = &schema.Table{
		Name:       "news",
		Columns:    NewsColumns,
		PrimaryKey: []*schema.Column{NewsColumns[0]},
	}
	// QrcodesColumns holds the columns for the "qrcodes" table.
	QrcodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "qrcode_id", Type: field.TypeString},
		{Name: "order_id", Type: field.TypeString},
		{Name: "order_status", Type: field.TypeString},
		{Name: "branch_name", Type: field.TypeString},
		{Name: "order_channel", Type: field.TypeString},
		{Name: "total_paid", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// QrcodesTable holds the schema information for the "qrcodes" table.
	QrcodesTable = &schema.Table{
		Name:       "qrcodes",
		Columns:    QrcodesColumns,
		PrimaryKey: []*schema.Column{QrcodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "qrcodes_users_qrcode",
				Columns:    []*schema.Column{QrcodesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "birthdate", Type: field.TypeTime},
		{Name: "email", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "point", Type: field.TypeInt},
		{Name: "star", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserOtpsColumns holds the columns for the "user_otps" table.
	UserOtpsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "reference", Type: field.TypeString, Unique: true},
		{Name: "hashed_otp", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeInt},
	}
	// UserOtpsTable holds the schema information for the "user_otps" table.
	UserOtpsTable = &schema.Table{
		Name:       "user_otps",
		Columns:    UserOtpsColumns,
		PrimaryKey: []*schema.Column{UserOtpsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_otps_users_otp",
				Columns:    []*schema.Column{UserOtpsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BranchesTable,
		NewsTable,
		QrcodesTable,
		UsersTable,
		UserOtpsTable,
	}
)

func init() {
	QrcodesTable.ForeignKeys[0].RefTable = UsersTable
	UserOtpsTable.ForeignKeys[0].RefTable = UsersTable
}
